name: "Regression Test - Accessibility (Pa11y) Test"
on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '**.md'
      - '**software-full.json'
      - '**software-sources.json'
      - '**update-software.yml'
      - '**update_software_helper.py'
      - '**software-rules.json'
      - 'Dockerfile'
      - '**regression-test-404.yml'
      - '**regression-test-a11y-statement.yml'
      - '**regression-test-css.yml'
      - '**regression-test-docker-image.yml'
      - '**regression-test-email.yml'
      - '**regression-test-google-lighthouse-based.yml'
      - '**regression-test-html.yml'
      - '**regression-test-http.yml'
      - '**regression-test-lint-css.yml'
      - '**regression-test-sitespeed-browsertime-har.yml'
      - '**regression-test-sitespeed.yml'
      - '**regression-test-software.yml'
      - '**regression-test-standard-files.yml'
      - '**regression-test-tracking.yml'
      - '**regression-test-translations.yml'
      - '**regression-test-webbkoll.yml'
      - '**regression-test-ylt.yml'
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
            matrix:
                # os: [ubuntu-latest, windows-latest]
                os: [ubuntu-20.04, windows-latest]
                version: [18]
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
    - name: Setup python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13' # Version range or exact version of a Python version to use, using SemVer's version range syntax
        architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
    - name: Setup dependencies using pip
      run: pip install -r requirements.txt
    - name: Setup Node.js (v4 version 20.x)
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    - name: Setup npm packages
      run: npm install --omit=dev
      timeout-minutes: 30
    # Havn't yet been able to start Google Chrome in headless mode in pa11y since move to Chrome in Pa11y 5
    - if: ${{ matrix.os == 'ubuntu-20.04' }}
      name: RUNNING TEST - LINUX
      run: |
         python default.py -t ${{ matrix.version }} -r -i defaults/sites.json -o data/testresult-${{ matrix.version }}.json
         python .github/workflows/verify_result.py -t ${{ matrix.version }}
    - if: ${{ matrix.os == 'windows-latest' }}
      name: RUNNING TEST - WINDOWS
      run: |
         python default.py -t ${{ matrix.version }} -r -i defaults\sites.json -o data\testresult-${{ matrix.version }}.json
         python .github\workflows\verify_result.py -t ${{ matrix.version }}
