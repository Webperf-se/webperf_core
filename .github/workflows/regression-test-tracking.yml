name: "Regression Test - Tracking and Privacy Test"
on: 
  #schedule:
  #  https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onschedule
  #  * is a special character in YAML so you have to quote this string
  #  - cron: '30 8,20 * * *'
  workflow_dispatch:
  push:
    paths-ignore:
      - '**.md'
      - '**software-full.json'
      - '**software-sources.json'
      - '**update-software.yml'
      - '**update_software_helper.py'
      - '**software-rules.json'
      - 'Dockerfile'
      - '**regression-test-404.yml'
      - '**regression-test-a11y-statement.yml'
      - '**regression-test-css.yml'
      - '**regression-test-docker-image.yml'
      - '**regression-test-email.yml'
      - '**regression-test-energy-efficiency.yml'
      - '**regression-test-google-lighthouse-based.yml'
      - '**regression-test-html.yml'
      - '**regression-test-http.yml'
      - '**regression-test-lint-css.yml'
      - '**regression-test-pa11y.yml'
      - '**regression-test-sitespeed-browsertime-har.yml'
      - '**regression-test-sitespeed.yml'
      - '**regression-test-software.yml'
      - '**regression-test-standard-files.yml'
      - '**regression-test-translations.yml'
      - '**regression-test-webbkoll.yml'
      - '**regression-test-ylt.yml'
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
            matrix:
                os: [ubuntu-latest] #, windows-latest]
                version: [23]
                config: ['SITESPEED_USE_DOCKER=False']
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
    - name: Setup python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13' # Version range or exact version of a Python version to use, using SemVer's version range syntax
        architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
    - name: Setup dependencies using pip
      run: pip install -r requirements.txt
    - if: ${{ matrix.os == 'ubuntu-latest' }}
      continue-on-error: true
      shell: bash
      env:
        IP2LOCATION_DOWNLOAD_URL: ${{ secrets.IP2LOCATION_DOWNLOAD_URL }}
      name: Download IP2LOCATION DB (Using repository secret) - Linux
      run: |
        mkdir -p data/
        wget -q -O data/IP2LOCATION-LITE-DB1.IPV6.BIN $IP2LOCATION_DOWNLOAD_URL
    - if: ${{ matrix.os == 'ubuntu-latest' }}
      continue-on-error: true
      shell: bash
      name: Download Ads database (BlockListProject) - Linux
      run: |
        mkdir -p data/
        wget -q -O data/blocklistproject-ads-nl.txt https://blocklistproject.github.io/Lists/alt-version/ads-nl.txt
    - if: ${{ matrix.os == 'ubuntu-latest' }}
      continue-on-error: true
      shell: bash
      name: Download Tracking database (BlockListProject) - Linux
      run: |
        mkdir -p data/
        wget -q -O data/blocklistproject-tracking-nl.txt https://blocklistproject.github.io/Lists/alt-version/tracking-nl.txt
    - if: ${{ matrix.os == 'ubuntu-latest' }}
      continue-on-error: true
      shell: bash
      name: Download Services database (disconnect) - Linux
      run: |
        mkdir -p data/
        wget -q -O data/disconnect-services.json https://raw.githubusercontent.com/disconnectme/disconnect-tracking-protection/master/services.json
    - name: Setup Node.js (v4 version 20.x)
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    - if: ${{ matrix.os == 'ubuntu-latest' }}
      shell: bash
      name: Setup Google Chrome browser (ONLY used for Sitespeed)
      run: |
        mkdir -p data/
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - 
        sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
        sudo apt-get update
        sudo apt-get --only-upgrade install google-chrome-stable
        google-chrome --version
    - name: Setup npm packages
      run: npm install
      timeout-minutes: 30
    - name: Start local HTTP server
      run: (npm run start-server&)
    - if: ${{ matrix.os == 'ubuntu-latest' }}
      name: RUNNING TEST - LINUX
      run: |
         python default.py -t ${{ matrix.version }} -r -u http://localhost:3000/ -o data/testresult-${{ matrix.version }}.json --setting ${{ matrix.config }} --setting tests.sitespeed.xvfb=true
         python .github/workflows/verify_result.py -t ${{ matrix.version }}
